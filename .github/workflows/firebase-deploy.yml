name: Build and Deploy to Firebase Hosting & Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install root dependencies (if any)
        run: |
          if [ -f package.json ]; then
            npm ci
          fi

      - name: Generate client config files
        env:
          CONFIG_GOOGLE_PLACES_KEY: ${{ secrets.CONFIG_GOOGLE_PLACES_KEY }}
          API_KEYS_JSON: ${{ secrets.API_KEYS_JSON }}
        run: |
          mkdir -p js || true
          
          # SOLUCIÓN DEFINITIVA: Incrustar la configuración directamente
          # para eliminar cualquier problema con el sistema de secretos de GitHub.
          echo '
          // Generated file - DO NOT COMMIT
          import { initializeApp } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";
          import { getFirestore } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js";
          import { getAuth, GoogleAuthProvider } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js";
          import { getStorage } from "https://www.gstatic.com/firebasejs/10.7.1/firebase-storage.js";

          const firebaseConfig = {
            "apiKey": "AIzaSyAfydxW2angrEgZ7TT2PJxv7RGGUUiGbW4",
            "authDomain": "japan-itin-dev.firebaseapp.com",
            "projectId": "japan-itin-dev",
            "storageBucket": "japan-itin-dev.firebasestorage.app",
            "messagingSenderId": "545081226259",
            "appId": "1:545081226259:web:d06fd9962e05d42d40fbe6",
            "measurementId": "G-DJ00DQ3MC8"
          };

          let app = null;
          let db = null;
          let auth = null;
          let storage = null;
          let googleProvider = null;

          if (firebaseConfig && firebaseConfig.apiKey) {
            app = initializeApp(firebaseConfig);
            db = getFirestore(app);
            auth = getAuth(app);
            storage = getStorage(app);
            googleProvider = new GoogleAuthProvider();
            console.log("🔥 Firebase initialized for project:", firebaseConfig.projectId || "(unknown)");
          } else {
            console.warn("⚠️ Firebase not initialized because configuration is missing or incomplete.");
          }

          export { app, db, auth, storage, googleProvider };
          ' > js/firebase-config.js

          # Generar js/config.js
          if [ -n "$CONFIG_GOOGLE_PLACES_KEY" ]; then
            printf 'export const APP_CONFIG = { GOOGLE_PLACES_API_KEY: "%s" };\n' "$CONFIG_GOOGLE_PLACES_KEY" > js/config.js
          fi
          
          # Generar js/apis-config.js
          if [ -n "$API_KEYS_JSON" ]; then
            printf 'export const RUNTIME_API_KEYS = %s;\n' "$API_KEYS_JSON" > js/apis-config.js
          fi

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'

      - name: Install firebase-tools
        run: npm install -g firebase-tools

      - name: Install functions dependencies
        run: |
          if [ -d "functions" ]; then
            npm --prefix functions install
          fi

      - name: Deploy to Firebase
        run: |
          firebase deploy --only hosting,functions --project ${{ secrets.FIREBASE_PROJECT_ID }} --force
