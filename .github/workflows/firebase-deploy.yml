name: Build and Deploy to Firebase Hosting & Functions

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install root dependencies (if any)
        run: |
          if [ -f package.json ]; then
            npm ci
          fi

      - name: Generate client config files
        run: |
          mkdir -p js || true
          
          # --- MÉTODO INFALIBLE PARA GENERAR FIREBASE-CONFIG.JS ---
          # Usamos un "Here Document" (cat << EOF) para escribir el archivo.
          # Esto inserta el secreto directamente sin que el shell lo modifique.
          cat << EOF > js/firebase-config.js
          // Generated file - DO NOT COMMIT
          import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js';
          import { getFirestore } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js';
          import { getAuth, GoogleAuthProvider } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js';
          import { getStorage } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-storage.js';

          const firebaseConfig = ${{ secrets.FIREBASE_CONFIG_JSON }};

          let app = null;
          let db = null;
          let auth = null;
          let storage = null;
          let googleProvider = null;

          if (firebaseConfig && firebaseConfig.apiKey) {
            app = initializeApp(firebaseConfig);
            db = getFirestore(app);
            auth = getAuth(app);
            storage = getStorage(app);
            googleProvider = new GoogleAuthProvider();
            console.log('🔥 Firebase initialized for project:', firebaseConfig.projectId || '(unknown)');
          } else {
            console.warn('⚠️ Firebase not initialized because configuration is missing or incomplete.');
          }

          export { app, db, auth, storage, googleProvider };
          EOF
          
          # --- Generación de otros archivos (sin cambios) ---
          if [ -n "${{ secrets.API_KEYS_JSON }}" ]; then
            printf '// Generated file - DO NOT COMMIT\nexport const RUNTIME_API_KEYS = %s;\n' "${{ secrets.API_KEYS_JSON }}" > js/apis-config.js
          fi
          
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'

      - name: Install firebase-tools
        run: npm install -g firebase-tools

      - name: Install functions dependencies
        run: |
          if [ -d "functions" ]; then
            npm --prefix functions install
          fi

      - name: Deploy to Firebase
        run: |
          firebase deploy --only hosting,functions --project ${{ secrets.FIREBASE_PROJECT_ID }} --force